input {
    file {
        type => "app:web"
        tags  => [ "app.web.logs"]
        path => "/\/\SERVER-NAME_1/\logs/\app.log*"
        add_field => {
            "server" => "systest"
            "market" => "market1_name"
        }
        codec => multiline {
            # Grok pattern names are valid! :)
            pattern => "^\[%{YEAR}-%{MONTHNUM}-%{MONTHDAY} %{TIME},%{INT}\]"
            negate => true
            what => previous
        }
    }
    file {
        type => "app:web"
        tags  => [ "app.web.logs"]
        path => "/\/\SERVER-NAME_2/\logs/\app.log*"
        add_field => {
            "server" => "systest"
            "market" => "market2_name"
        }
        codec => multiline {
            # Grok pattern names are valid! :)
            pattern => "^\[%{YEAR}-%{MONTHNUM}-%{MONTHDAY} %{TIME},%{INT}\]"
            negate => true
            what => previous
        }
    }
}
filter{
    if "app.web.logs" in [tags] {
        grok {
            break_on_match => true
            match => ["message","\[%{TIMESTAMP_ISO8601:a_timestamp}\] -> %{WORD:username} %{WORD:tense}\(%{UUID:sessionid}\)%{SPACE}%{WORD:httpverb} %{WORD:controllername} %{WORD:controlleraction} nomId=%{INT:nominationid}"]
            match => ["message","\[%{TIMESTAMP_ISO8601:a_timestamp}\] -> %{WORD:username} %{WORD:tense}\(%{UUID:sessionid}\)%{SPACE}%{WORD:httpverb} %{WORD:controllername} %{WORD:controlleraction}"]
            match => ["message","\[%{TIMESTAMP_ISO8601:a_timestamp}\] -> Area:%{SPACE}Controller:%{SPACE}%{WORD:controllername}"]
            match => ["message","\[%{TIMESTAMP_ISO8601:a_timestamp}\]"]
        }
        date {
            match => [ "a_timestamp", "yyyy-MM-dd HH:mm:ss,SSS" ]
            target => "@timestamp"
        }
    }
}
